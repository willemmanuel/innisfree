var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","appointment","appointmentscontroller","appointmentshelper","appointmentsreportpdf","apttype","apttypescontroller","car","carscontroller","carshelper","doctor","doctorscontroller","doctorshelper","house","housescontroller","houseshelper","notificationmailer","object","post","recurringreminder","report","reportpdf","reportscontroller","reportshelper","reservation","resident","residentscontroller","residentshelper","settingscontroller","settingshelper","testhelper","user","users","registrationscontroller","userscontroller","usershelper","add_apt_type()","appointment_assignment_notification()","appointment_digest()","appointment_reminder()","appointments()","appointments_for_day()","car_available?()","create()","create()","create()","create()","create()","create()","create_user()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_reservation()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","fix_dst()","generate()","get_availability()","get_reservations()","header()","header()","house_reminder()","index()","index()","index()","index()","index()","index()","index()","index()","manage()","map_link()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_appointment_notification()","new_reservation()","overlap?()","parse_time()","product_rows()","product_rows()","recurring_appointment_reminder()","residents()","save_reservation()","send_house_reminder()","send_reminders()","send_reminders()","send_weekly_digest()","set_recurring_reminder()","show()","show()","show()","show()","show()","show()","show_reservation()","sort_column()","sortable()","table_content()","table_content()","text_content()","text_content()","to_csv()","to_csv()","to_csv()","to_csv()","to_csv()","toggle_user_approval()","toggle_user_email_preference()","toggle_user_medical_coordinator()","toggle_user_permission()","upcoming()","update()","update()","update()","update()","update()","update()","update()","update_residents()","valid_times?()","weekly_digest()","listmonth.js","application.js","appointments.js.coffee","cars.js.coffee","houses.js.coffee","physicians.js.coffee","reports.js.coffee","residents.js.coffee","settings.js.coffee","test.js.coffee","users.js.coffee","application.css.sass","bootswatch.css","list.css","mobile.css","reports.css.scss","settings.css.scss","users.css.scss","index.json.jbuilder","show.json.jbuilder","get_reservations.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder"],"longSearchIndex":["applicationcontroller","applicationhelper","appointment","appointmentscontroller","appointmentshelper","appointmentsreportpdf","apttype","apttypescontroller","car","carscontroller","carshelper","doctor","doctorscontroller","doctorshelper","house","housescontroller","houseshelper","notificationmailer","object","post","recurringreminder","report","reportpdf","reportscontroller","reportshelper","reservation","resident","residentscontroller","residentshelper","settingscontroller","settingshelper","testhelper","user","users","users::registrationscontroller","userscontroller","usershelper","appointmentscontroller#add_apt_type()","notificationmailer#appointment_assignment_notification()","notificationmailer#appointment_digest()","notificationmailer#appointment_reminder()","appointmentscontroller#appointments()","appointmentscontroller#appointments_for_day()","carshelper#car_available?()","appointmentscontroller#create()","carscontroller#create()","doctorscontroller#create()","housescontroller#create()","reportscontroller#create()","residentscontroller#create()","settingscontroller#create_user()","appointmentscontroller#destroy()","apttypescontroller#destroy()","carscontroller#destroy()","doctorscontroller#destroy()","housescontroller#destroy()","residentscontroller#destroy()","userscontroller#destroy()","carscontroller#destroy_reservation()","appointmentscontroller#edit()","carscontroller#edit()","doctorscontroller#edit()","housescontroller#edit()","residentscontroller#edit()","users::registrationscontroller#edit()","userscontroller#edit()","carshelper#fix_dst()","reportscontroller#generate()","carscontroller#get_availability()","carscontroller#get_reservations()","appointmentsreportpdf#header()","reportpdf#header()","notificationmailer#house_reminder()","appointmentscontroller#index()","carscontroller#index()","doctorscontroller#index()","housescontroller#index()","reportscontroller#index()","residentscontroller#index()","settingscontroller#index()","userscontroller#index()","carscontroller#manage()","applicationhelper#map_link()","resident#name()","user#name()","appointmentscontroller#new()","appointmentsreportpdf::new()","carscontroller#new()","doctorscontroller#new()","housescontroller#new()","reportpdf::new()","residentscontroller#new()","users::registrationscontroller#new()","userscontroller#new()","notificationmailer#new_appointment_notification()","carscontroller#new_reservation()","carshelper#overlap?()","carshelper#parse_time()","appointmentsreportpdf#product_rows()","reportpdf#product_rows()","notificationmailer#recurring_appointment_reminder()","appointmentscontroller#residents()","carscontroller#save_reservation()","appointmentscontroller#send_house_reminder()","user::send_reminders()","userscontroller#send_reminders()","user::send_weekly_digest()","appointmentscontroller#set_recurring_reminder()","appointmentscontroller#show()","carscontroller#show()","doctorscontroller#show()","housescontroller#show()","residentscontroller#show()","userscontroller#show()","carscontroller#show_reservation()","object#sort_column()","doctorshelper#sortable()","appointmentsreportpdf#table_content()","reportpdf#table_content()","appointmentsreportpdf#text_content()","reportpdf#text_content()","appointment::to_csv()","doctor::to_csv()","house::to_csv()","report::to_csv()","resident::to_csv()","settingscontroller#toggle_user_approval()","settingscontroller#toggle_user_email_preference()","settingscontroller#toggle_user_medical_coordinator()","settingscontroller#toggle_user_permission()","appointmentscontroller#upcoming()","appointmentscontroller#update()","carscontroller#update()","doctorscontroller#update()","housescontroller#update()","residentscontroller#update()","users::registrationscontroller#update()","userscontroller#update()","appointmentscontroller#update_residents()","carshelper#valid_times?()","notificationmailer#weekly_digest()","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Appointment","","Appointment.html","","<p>Schema Information\n<p>Table name: appointments\n\n<pre>id          :integer          not null, primary key\nresident_id ...</pre>\n"],["AppointmentsController","","AppointmentsController.html","","<p>The Appointments Controller controls appointments. It is responsible for\ncreating, viewing, editing, …\n"],["AppointmentsHelper","","AppointmentsHelper.html","",""],["AppointmentsReportPdf","","AppointmentsReportPdf.html","",""],["AptType","","AptType.html","","<p>Schema Information\n<p>Table name: apt_types\n\n<pre>id         :integer          not null, primary key\napt_type   ...</pre>\n"],["AptTypesController","","AptTypesController.html","",""],["Car","","Car.html","","<p>Schema Information\n<p>Table name: cars\n\n<pre>id         :integer          not null, primary key\nname       :string(255) ...</pre>\n"],["CarsController","","CarsController.html","",""],["CarsHelper","","CarsHelper.html","",""],["Doctor","","Doctor.html","",""],["DoctorsController","","DoctorsController.html","",""],["DoctorsHelper","","DoctorsHelper.html","",""],["House","","House.html","","<p>Schema Information\n<p>Table name: houses\n\n<pre>id         :integer          not null, primary key\nname       :string(255) ...</pre>\n"],["HousesController","","HousesController.html","",""],["HousesHelper","","HousesHelper.html","",""],["NotificationMailer","","NotificationMailer.html","",""],["Object","","Object.html","",""],["Post","","Post.html","","<p>Schema Information\n<p>Table name: posts\n\n<pre>id         :integer          not null, primary key\ntitle      :string(255) ...</pre>\n"],["RecurringReminder","","RecurringReminder.html","","<p>Schema Information\n<p>Table name: recurring_reminders\n\n<pre>id                :integer          not null, primary ...</pre>\n"],["Report","","Report.html","",""],["ReportPdf","","ReportPdf.html","",""],["ReportsController","","ReportsController.html","",""],["ReportsHelper","","ReportsHelper.html","",""],["Reservation","","Reservation.html","","<p>Schema Information\n<p>Table name: reservations\n\n<pre>id         :integer          not null, primary key\nstart   ...</pre>\n"],["Resident","","Resident.html","","<p>Schema Information\n<p>Table name: residents\n\n<pre>id         :integer          not null, primary key\nname       ...</pre>\n"],["ResidentsController","","ResidentsController.html","",""],["ResidentsHelper","","ResidentsHelper.html","",""],["SettingsController","","SettingsController.html","",""],["SettingsHelper","","SettingsHelper.html","",""],["TestHelper","","TestHelper.html","",""],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id                     :integer          not null, primary key\nemail ...</pre>\n"],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["add_apt_type","AppointmentsController","AppointmentsController.html#method-i-add_apt_type","()","<p>GET /appointments/add_apt_type add_apt_type - allows for adding a new\nappointment type and then updates …\n"],["appointment_assignment_notification","NotificationMailer","NotificationMailer.html#method-i-appointment_assignment_notification","(appointment)","<p>Parameter: appointment to send a reminder about\nappointment_assignment-reminder - sends an email to the …\n"],["appointment_digest","NotificationMailer","NotificationMailer.html#method-i-appointment_digest","(user)","<p>Parameter: user to send email to appointment_digest - sends a digest of the\nday&#39;s appointments to …\n"],["appointment_reminder","NotificationMailer","NotificationMailer.html#method-i-appointment_reminder","(appointment)","<p>Parameter: appointment to send a reminder about appointment_reminder -\nsends a reminder to the assigned …\n"],["appointments","AppointmentsController","AppointmentsController.html#method-i-appointments","()",""],["appointments_for_day","AppointmentsController","AppointmentsController.html#method-i-appointments_for_day","()","<p>GET appointments/appointments_for_day - usually called from other\npage/method appointments_for_day - …\n"],["car_available?","CarsHelper","CarsHelper.html#method-i-car_available-3F","(car, start, finish)","<p>Determines if a car is available during a reservation time\n"],["create","AppointmentsController","AppointmentsController.html#method-i-create","()","<p>POST /appointments POST /appointments.json create - POSTed to when the\n“Create Appointment” …\n"],["create","CarsController","CarsController.html#method-i-create","()","<p>POST /cars POST /cars.json\n"],["create","DoctorsController","DoctorsController.html#method-i-create","()","<p>POST /doctors POST /doctors.json\n"],["create","HousesController","HousesController.html#method-i-create","()","<p>Adds the new house to the database, relating success or error to the user\n"],["create","ReportsController","ReportsController.html#method-i-create","()",""],["create","ResidentsController","ResidentsController.html#method-i-create","()","<p>POST /residents POST /residents.json\n"],["create_user","SettingsController","SettingsController.html#method-i-create_user","()",""],["destroy","AppointmentsController","AppointmentsController.html#method-i-destroy","()","<p>DELETE /appointments/1 DELETE /appointments/1.json destroy - used to delete\nan appointment. Redirects …\n"],["destroy","AptTypesController","AptTypesController.html#method-i-destroy","()",""],["destroy","CarsController","CarsController.html#method-i-destroy","()","<p>DELETE /cars/1 DELETE /cars/1.json\n"],["destroy","DoctorsController","DoctorsController.html#method-i-destroy","()","<p>DELETE /doctors/1 DELETE /doctors/1.json\n"],["destroy","HousesController","HousesController.html#method-i-destroy","()","<p>Deletes a house from the database, notifying the user as to what was\ndeleted\n"],["destroy","ResidentsController","ResidentsController.html#method-i-destroy","()","<p>DELETE /residents/1 DELETE /residents/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>Destroys a user entry from the database\n"],["destroy_reservation","CarsController","CarsController.html#method-i-destroy_reservation","()",""],["edit","AppointmentsController","AppointmentsController.html#method-i-edit","()","<p>GET /appointments/1/edit edit - populates data fields needed to edit an\nappointment\n"],["edit","CarsController","CarsController.html#method-i-edit","()","<p>GET /cars/1/edit\n"],["edit","DoctorsController","DoctorsController.html#method-i-edit","()","<p>GET /doctors/1/edit\n"],["edit","HousesController","HousesController.html#method-i-edit","()","<p>Opens a house for changes\n"],["edit","ResidentsController","ResidentsController.html#method-i-edit","()","<p>GET /residents/1/edit\n"],["edit","Users::RegistrationsController","Users/RegistrationsController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()","<p>Sets a houses variable to equal all houses currently stored in the database\nSets a user variable to the …\n"],["fix_dst","CarsHelper","CarsHelper.html#method-i-fix_dst","(time)","<p>Determines daylight savings time\n"],["generate","ReportsController","ReportsController.html#method-i-generate","()",""],["get_availability","CarsController","CarsController.html#method-i-get_availability","()",""],["get_reservations","CarsController","CarsController.html#method-i-get_reservations","()",""],["header","AppointmentsReportPdf","AppointmentsReportPdf.html#method-i-header","()",""],["header","ReportPdf","ReportPdf.html#method-i-header","()",""],["house_reminder","NotificationMailer","NotificationMailer.html#method-i-house_reminder","(appointment, user)","<p>Parameter: appointment to send a reminder about Parameter: user to send a\nreminder to house_reminder …\n"],["index","AppointmentsController","AppointmentsController.html#method-i-index","()","<p>GET /appointments GET /appointments.json index - the main page of our web\napplication Checks the request …\n"],["index","CarsController","CarsController.html#method-i-index","()","<p>GET /cars GET /cars.json\n"],["index","DoctorsController","DoctorsController.html#method-i-index","()",""],["index","HousesController","HousesController.html#method-i-index","()","<p>GET /houses GET /houses.json\n"],["index","ReportsController","ReportsController.html#method-i-index","()","<p>GET /appointments GET /appointments.json\n"],["index","ResidentsController","ResidentsController.html#method-i-index","()",""],["index","SettingsController","SettingsController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /houses GET /houses.json index - the list view of all users when\nformatted in html In addition, this …\n"],["manage","CarsController","CarsController.html#method-i-manage","()",""],["map_link","ApplicationHelper","ApplicationHelper.html#method-i-map_link","(address)","<p>Helps with getting Google map for doctors to be displayed on appointments\n"],["name","Resident","Resident.html#method-i-name","()",""],["name","User","User.html#method-i-name","()","<p>If the user does not have a name, provide the email in case\n"],["new","AppointmentsController","AppointmentsController.html#method-i-new","()","<p>GET /appointments/new new - populates data fields needed to create a new\nappointment\n"],["new","AppointmentsReportPdf","AppointmentsReportPdf.html#method-c-new","(data)",""],["new","CarsController","CarsController.html#method-i-new","()","<p>GET /cars/new\n"],["new","DoctorsController","DoctorsController.html#method-i-new","()","<p>GET /doctors/new\n"],["new","HousesController","HousesController.html#method-i-new","()","<p>Gets a new house to be filled in\n"],["new","ReportPdf","ReportPdf.html#method-c-new","(data)",""],["new","ResidentsController","ResidentsController.html#method-i-new","()","<p>GET /residents/new\n"],["new","Users::RegistrationsController","Users/RegistrationsController.html#method-i-new","()",""],["new","UsersController","UsersController.html#method-i-new","()","<p>Sets a user variable to a new User which will be created if create is\ncalled Sets a houses variable to …\n"],["new_appointment_notification","NotificationMailer","NotificationMailer.html#method-i-new_appointment_notification","(appointment, user)","<p>Parameter: appointment to send a reminder about Parameter: user to send a\nreminder to new_appointment_notification …\n"],["new_reservation","CarsController","CarsController.html#method-i-new_reservation","()",""],["overlap?","CarsHelper","CarsHelper.html#method-i-overlap-3F","(existing_reservation, start, finish)","<p>Determines if car reservations overlap each other\n"],["parse_time","CarsHelper","CarsHelper.html#method-i-parse_time","(date, time)","<p>Converts time into a readable formal\n"],["product_rows","AppointmentsReportPdf","AppointmentsReportPdf.html#method-i-product_rows","()",""],["product_rows","ReportPdf","ReportPdf.html#method-i-product_rows","()",""],["recurring_appointment_reminder","NotificationMailer","NotificationMailer.html#method-i-recurring_appointment_reminder","(appointment)","<p>Parameter: appointment to send a reminder about\nrecurring_appointment_reminder - sends a reminder to …\n"],["residents","AppointmentsController","AppointmentsController.html#method-i-residents","()",""],["save_reservation","CarsController","CarsController.html#method-i-save_reservation","()",""],["send_house_reminder","AppointmentsController","AppointmentsController.html#method-i-send_house_reminder","()","<p>POST /appointments/:id/send_house_reminder send_house_reminder - used to\nsend an appointment reminder …\n"],["send_reminders","User","User.html#method-c-send_reminders","()","<p>Sends emails to remind users of the schedule for the day and any reminders\nset for recurring appointments …\n"],["send_reminders","UsersController","UsersController.html#method-i-send_reminders","()","<p>Makes a call to the send_reminders method in the User model\n"],["send_weekly_digest","User","User.html#method-c-send_weekly_digest","()","<p>Sends a reminder of the week&#39;s appointments to the medical coordinator\n"],["set_recurring_reminder","AppointmentsController","AppointmentsController.html#method-i-set_recurring_reminder","()","<p>GET /appointments set_recurring_reminder - used to set a reminder that an\nappointment is recurring and …\n"],["show","AppointmentsController","AppointmentsController.html#method-i-show","()","<p>GET /appointments/1 GET /appointments/1.json show - shows an individual\nappointment\n"],["show","CarsController","CarsController.html#method-i-show","()","<p>GET /cars/1 GET /cars/1.json\n"],["show","DoctorsController","DoctorsController.html#method-i-show","()","<p>GET /doctors/1 GET /doctors/1.json\n"],["show","HousesController","HousesController.html#method-i-show","()","<p>Displays an individual house page\n"],["show","ResidentsController","ResidentsController.html#method-i-show","()","<p>GET /residents/1 GET /residents/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>Sets a houses variable to equal all houses currently stored in the database\n"],["show_reservation","CarsController","CarsController.html#method-i-show_reservation","()",""],["sort_column","Object","Object.html#method-i-sort_column","()",""],["sortable","DoctorsHelper","DoctorsHelper.html#method-i-sortable","(column, title = nil)","<p>Assists with sorting the columns for the doctors page\n"],["table_content","AppointmentsReportPdf","AppointmentsReportPdf.html#method-i-table_content","()",""],["table_content","ReportPdf","ReportPdf.html#method-i-table_content","()",""],["text_content","AppointmentsReportPdf","AppointmentsReportPdf.html#method-i-text_content","()",""],["text_content","ReportPdf","ReportPdf.html#method-i-text_content","()",""],["to_csv","Appointment","Appointment.html#method-c-to_csv","()","<p>Allows all the appointments to be exported into a CSV file\n"],["to_csv","Doctor","Doctor.html#method-c-to_csv","()",""],["to_csv","House","House.html#method-c-to_csv","()","<p>Defines what a CSV list of the houses will look like\n"],["to_csv","Report","Report.html#method-c-to_csv","()",""],["to_csv","Resident","Resident.html#method-c-to_csv","()",""],["toggle_user_approval","SettingsController","SettingsController.html#method-i-toggle_user_approval","()",""],["toggle_user_email_preference","SettingsController","SettingsController.html#method-i-toggle_user_email_preference","()",""],["toggle_user_medical_coordinator","SettingsController","SettingsController.html#method-i-toggle_user_medical_coordinator","()",""],["toggle_user_permission","SettingsController","SettingsController.html#method-i-toggle_user_permission","()",""],["upcoming","AppointmentsController","AppointmentsController.html#method-i-upcoming","()","<p>GET appointments/upcoming - usually called from other page/method upcoming\n- used to render a table of …\n"],["update","AppointmentsController","AppointmentsController.html#method-i-update","()","<p>PATCH/PUT /appointments/1 PATCH/PUT /appointments/1.json update -\nPATCH/PUTed to when the “Update …\n"],["update","CarsController","CarsController.html#method-i-update","()","<p>PATCH/PUT /cars/1 PATCH/PUT /cars/1.json\n"],["update","DoctorsController","DoctorsController.html#method-i-update","()","<p>PATCH/PUT /doctors/1 PATCH/PUT /doctors/1.json\n"],["update","HousesController","HousesController.html#method-i-update","()","<p>Changes a house based on edits, relating success or error back to the user\n"],["update","ResidentsController","ResidentsController.html#method-i-update","()","<p>PATCH/PUT /residents/1 PATCH/PUT /residents/1.json\n"],["update","Users::RegistrationsController","Users/RegistrationsController.html#method-i-update","()",""],["update","UsersController","UsersController.html#method-i-update","()","<p>Updates the user set in the edit method Calls an update method in the User\nmodel based on whether a password …\n"],["update_residents","AppointmentsController","AppointmentsController.html#method-i-update_residents","()","<p>GET /appointments GET /appointments.json update_residents - updates the\nresidents available in the resident …\n"],["valid_times?","CarsHelper","CarsHelper.html#method-i-valid_times-3F","(start, finish)","<p>Determines if a car reservation&#39;s start and end time are acceptable\n"],["weekly_digest","NotificationMailer","NotificationMailer.html#method-i-weekly_digest","(user)","<p>Parameter: user to send email to weekly_digest - sends a digest of the next\nweek&#39;s appointments to …\n"],["ListMonth.js","","assets/javascripts/FullCalendar/ListMonth_js.html","","\n<pre>An abstract class for the &quot;list&quot; views. Renders one or more rows of day cells.</pre>\n<p>// It is a manager for …\n"],["application.js","","assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["appointments.js.coffee","","assets/javascripts/appointments_js_coffee.html","","<p>-&gt; $(document).on &#39;change&#39;, &#39;.house_select&#39;, (evt) -&gt;\n\n<pre>$.ajax &#39;/appointments/update_residents&#39;, ...</pre>\n"],["cars.js.coffee","","assets/javascripts/cars_js_coffee.html","","<p># Place all the behaviors and hooks related to the matching controller\nhere. # All this logic will automatically …\n"],["houses.js.coffee","","assets/javascripts/houses_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["physicians.js.coffee","","assets/javascripts/physicians_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["reports.js.coffee","","assets/javascripts/reports_js_coffee.html","","<p># Place all the behaviors and hooks related to the matching controller\nhere. # All this logic will automatically …\n"],["residents.js.coffee","","assets/javascripts/residents_js_coffee.html","","<p># Place all the behaviors and hooks related to the matching controller\nhere. # All this logic will automatically …\n"],["settings.js.coffee","","assets/javascripts/settings_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["test.js.coffee","","assets/javascripts/test_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["users.js.coffee","","assets/javascripts/users_js_coffee.html","","<p># Place all the behaviors and hooks related to the matching controller\nhere. # All this logic will automatically …\n"],["application.css.sass","","assets/stylesheets/application_css_sass.html","","\n<pre> This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\n ...</pre>\n"],["bootswatch.css","","assets/stylesheets/bootswatch_css.html","","<p>@import\nurl(“//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700italic,400,300,700”);\n…\n"],["list.css","","assets/stylesheets/list_css.html","","<p>.fc-listWeek-view .fc-week-number {\n\n<pre>padding: 0 2px;\nvertical-align: middle;</pre>\n<p>}\n"],["mobile.css","","assets/stylesheets/mobile_css.html","","<p>@media all and (max-width: 951px) {\n\n<pre>body{\n        font-size: 200%!important;\n}\n\n.mobile-size{\n        ...</pre>\n"],["reports.css.scss","","assets/stylesheets/reports_css_scss.html","","<p>// Place all the styles related to the reports controller here. // They\nwill automatically be included …\n"],["settings.css.scss","","assets/stylesheets/settings_css_scss.html","","<p>// Place all the styles related to the Settings controller here. // They\nwill automatically be included …\n"],["users.css.scss","","assets/stylesheets/users_css_scss.html","","<p>// Place all the styles related to the Users controller here. // They will\nautomatically be included …\n"],["index.json.jbuilder","","views/appointments/index_json_jbuilder.html","","<p>json.array!(@appointments_counts) do |appointment|\n\n<pre>if appointment[1] == 1\n  json.title appointment[1].to_s ...</pre>\n"],["show.json.jbuilder","","views/appointments/show_json_jbuilder.html","","<p>json.extract! @appointment, :id, :resident_id, :doctor_id, :user_id, :date,\n:time, :for, :notes, :created_at, …\n"],["get_reservations.json.jbuilder","","views/cars/get_reservations_json_jbuilder.html","","<p>json.array!(@reservations) do |reservation|\n\n<pre>json.start reservation.start\njson.end reservation.finish\njson.title ...</pre>\n"],["index.json.jbuilder","","views/cars/index_json_jbuilder.html","","<p>json.array!(@cars) do |car|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">extract!</span> <span class=\"ruby-identifier\">car</span>, :<span class=\"ruby-identifier\">id</span>, :<span class=\"ruby-identifier\">name</span>\n<span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">url</span> <span class=\"ruby-identifier\">car_url</span>(<span class=\"ruby-identifier\">car</span>, <span class=\"ruby-identifier\">format</span><span class=\"ruby-operator\">:</span> :<span class=\"ruby-identifier\">json</span>)\n</pre>\n<p>end\n"],["show.json.jbuilder","","views/cars/show_json_jbuilder.html","","<p>json.extract! @car, :id, :name, :user_id, :for, :created_at, :updated_at\n"],["index.json.jbuilder","","views/doctors/index_json_jbuilder.html","","<p>json.array!(@doctors) do |doctor|\n\n<pre>json.extract! doctor, :id, :name, :address, :phone\njson.url doctor_url(doctor, ...</pre>\n"],["show.json.jbuilder","","views/doctors/show_json_jbuilder.html","","<p>json.extract! @doctor, :id, :name, :address, :phone, :created_at,\n:updated_at\n"],["index.json.jbuilder","","views/houses/index_json_jbuilder.html","","<p>json.array!(@houses) do |house|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">extract!</span> <span class=\"ruby-identifier\">house</span>, :<span class=\"ruby-identifier\">id</span>, :<span class=\"ruby-identifier\">name</span>\n<span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">url</span> <span class=\"ruby-identifier\">house_url</span>(<span class=\"ruby-identifier\">house</span>, <span class=\"ruby-identifier\">format</span><span class=\"ruby-operator\">:</span> :<span class=\"ruby-identifier\">json</span>)\n</pre>\n"],["show.json.jbuilder","","views/houses/show_json_jbuilder.html","","<p>json.extract! @house, :id, :name, :created_at, :updated_at\n"],["index.json.jbuilder","","views/reports/index_json_jbuilder.html","","<p>json.array!(@appointments) do |appointment|\n\n<pre>json.extract! appointment, :id, :resident_id, :doctor_id, ...</pre>\n"],["show.json.jbuilder","","views/residents/show_json_jbuilder.html","","<p>json.extract! @resident, :id, :name, :house_id, :notes, :created_at,\n:updated_at\n"]]}}